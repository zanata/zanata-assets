/*

### Loader

```
<a href="#" class="loader"><span class="loader__label">Loader Label</span></a>

<button class="button loader"><span class="loader__label">Loader Button Label</span></button>

<a href="#" class="loader is-active">
  <span class="loader__label">
    (Active) Loader Label
    <span class="loader__spinner">
      <span></span>
      <span></span>
      <span></span>
    </span>
  </span>
</a>

<div class="loader--mini is-active">
  <span class="loader__spinner">
    <span></span>
    <span></span>
    <span></span>
  </span>
</div>

<div class="loader--small is-active">
  <span class="loader__spinner">
    <span></span>
    <span></span>
    <span></span>
  </span>
</div>

<div class="loader--large is-active">
  <span class="loader__spinner">
    <span></span>
    <span></span>
    <span></span>
  </span>
</div>

<div class="loader--huge is-active">
  <span class="loader__spinner">
    <span></span>
    <span></span>
    <span></span>
  </span>
</div>
```

*/

%loader-transition {
  @include transition(all 0.15s cubic-bezier(.26, .47, .36, .94));
}

.loader {
  @extend %loader-transition;
  position: relative;
  display: block;
  text-align: center;
  margin: 0 auto;
  line-height: rhythm(1);
  min-height: rhythm(1);
  &.is-active {
    min-width: rhythm(1);
  }
}

a.loader {
  &:hover {
    background-color: rgba($color-secondary, 0.03);
  }
  &:active {
    background-color: rgba($color-secondary, 0.03);
  }
  &.is-active {
    @include border-radius($default-border-radius);
    background-color: rgba($color-secondary, 0.03);
    cursor: default;
  }
}

.loader__label {
  @extend %loader-transition;
  position: relative;
  transform-style: preserve-3d;
  .loader.is-active & {
    @include opacity(.5);
    padding-left: rhythm(1.5);
    color: $color-link-active;
  }
}

.loader__spinner {
  @extend %loader-transition;
  @include opacity(0);
  @include transform(translateY(-50%));
  position: absolute;
  left: 0;
  top: 50%;
  height: rhythm(.25);
  .loader.is-active & {
    @include opacity(1);
  }
  span {
    @include animation-name(loading);
    @include animation-duration(.6s);
    @include animation-iteration-count(infinite);
    @include animation-timing-function(linear);
    position: absolute;
    width: rhythm(.25);
    height: rhythm(.25);
    border-radius: rhythm(1);
    background-color: $color-secondary;
    &:nth-child(1){
      @include animation-delay(0s);
      left: 0;
    }
    &:nth-child(2){
      @include animation-delay(-0.15s);
      left: rhythm(.375);
    }
    &:nth-child(3){
      @include animation-delay(-0.3s);
      left: rhythm(.75);
    }
  }
}

.loader > .loader__spinner {
  left: 50%;
  margin-left: rhythm(-.5);
}

.loader--inline {
  min-height: rhythm(1);
  display: inline-block;
  vertical-align: middle;
  // compensate for display inline-block space
  margin-left: -0.3em;
  &.is-active {
    min-width: rhythm(1);
    margin-left: rhythm(.125);
    margin-right: rhythm(.125);
  }
}

.loader--center {
  @extend .bg--high;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 100;
}

.loader--mini {
  @extend .loader;
  @include adjust-font-size-to(12px);
}

.loader--small {
  @extend .loader;
  @include adjust-font-size-to(14px);
}

.loader--large {
  @extend .loader;
  @include adjust-font-size-to(24px);
}

.loader--huge {
  @extend .loader;
  @include adjust-font-size-to(36px);
}

@include keyframes (loading) {
  0%{
    opacity: 0.2;
  }
  50%{
    opacity: 1;
  }
  100%{
    opacity: 0.2;
  }
}
